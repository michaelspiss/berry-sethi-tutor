import {create} from "zustand";
import {RegexTreeItem} from "@/analyze_regex/domain/models/regexTree";
import React from "react";

interface AppState {
    /**
     * The user provided regex
     */
    regex: string,
    /**
     * Indicates whether redundant groups have been removed
     */
    isSimplified: boolean,
    /**
     * Regex tree model generated by parseRegex from the user provided regex
     */
    regexModel: RegexTreeItem|null,
    /**
     * The zero-indexed step the user is at in the tutorial. Negative 1 to show regex input screen
     */
    solveStep: number,
    /**
     * Displays error messages below the verify/solve buttons if set. Optionally provides an array of
     * edge/node ids which caused the error.
     */
    verificationErrors?: {title: string, message: React.ReactElement, causes?: string[]}[],
    /**
     * Overrides the step's "canSelectElements" attribute temporarily
     */
    disableSelect: boolean,
    /**
     * Displays an overlay on successful completion of automaton creation
     */
    isDone: boolean,
}

const useAppStateStore = create<AppState>(() => ({
    regex: "",
    isSimplified: false,
    regexModel: null,
    solveStep: -1,
    disableSelect: false,
    isDone: false,
}))

export default useAppStateStore
